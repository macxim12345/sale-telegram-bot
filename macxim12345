<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Карта объявлений</title>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>

    <style>
        body, html { margin: 0; padding: 0; height: 100%; width: 100%; overflow: hidden; }
        #map { height: 100%; width: 100%; }
    </style>
</head>
<body>
    <div id="map"></div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const tg = window.Telegram.WebApp;
            tg.ready();

            // --- ОБНОВЛЕННАЯ ЛОГИКА ПОЛУЧЕНИЯ ДАННЫХ ---
            function getAdsData() {
                try {
                    const urlParams = new URLSearchParams(window.location.search);
                    if (urlParams.has('data')) {
                        // Если бот прислал данные - используем их
                        return JSON.parse(decodeURIComponent(urlParams.get('data')));
                    }
                } catch (error) {
                    console.error("Ошибка при получении данных от бота:", error);
                }
                
                // Если данных от бота нет (открыли ссылку напрямую) - ПОКАЗЫВАЕМ ТЕСТОВЫЕ ДАННЫЕ
                console.log("Данные от бота не найдены. Используются тестовые данные.");
                return [
                    { "title": "Тестовая 1-комн. квартира (Харьков)", "price": "8500 грн", "lat": 49.9935, "lon": 36.2304 },
                    { "title": "Тестовый дом у парка (Харьков)", "price": "20000 грн", "lat": 50.005, "lon": 36.240 }
                ];
            }

            const adsData = getAdsData();
            // ------------------------------------

            if (!adsData || adsData.length === 0) {
                document.getElementById('map').innerHTML = '<h3 style="text-align: center; padding-top: 20px;">Объявлений для отображения не найдено.</h3>';
                return;
            }

            const map = L.map('map').setView([adsData[0].lat, adsData[0].lon], 13);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            const markers = [];
            adsData.forEach(ad => {
                const marker = L.marker([ad.lat, ad.lon]);
                marker.bindPopup(`<b>${ad.title}</b><br>${ad.price}`);
                markers.push(marker);
            });
            
            const group = new L.featureGroup(markers).addTo(map);
            map.fitBounds(group.getBounds().pad(0.5));
        });
    </script>
</body>
</html>
