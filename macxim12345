<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Карта объявлений</title>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>

    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

    <script src="https://telegram.org/js/telegram-web-app.js"></script>

    <style>
        /* Убираем все отступы и делаем так, чтобы карта занимала 100% экрана */
        body, html {
            margin: 0;
            padding: 0;
            height: 100%;
            width: 100%;
            overflow: hidden; /* Прячем возможную прокрутку */
        }
        #map {
            height: 100%;
            width: 100%;
        }
    </style>
</head>
<body>

    <div id="map"></div>

    <script>
        // Весь наш код будет внутри этой функции, чтобы он запускался после загрузки страницы
        document.addEventListener('DOMContentLoaded', function () {
            // Инициализируем Web App API
            const tg = window.Telegram.WebApp;
            tg.ready(); // Сообщаем Telegram, что наше приложение готово к отображению

            // --- ВАЖНО: ДАННЫЕ ОТ БОТА ---
            // Пока что, для теста, мы используем "зашитые" данные.
            // На следующем шаге мы заменим это на получение реальных данных от бота.
            const adsData = [
                { "title": "Тестовая 1-комн. квартира", "price": "8500 грн", "lat": 49.9935, "lon": 36.2304 },
                { "title": "Тестовый дом у парка", "price": "20000 грн", "lat": 50.005, "lon": 36.240 }
            ];
            // ------------------------------------

            // Проверяем, есть ли вообще данные для отображения
            if (!adsData || adsData.length === 0) {
                // Если данных нет, показываем сообщение и не инициализируем карту
                document.getElementById('map').innerHTML = '<h3 style="text-align: center; padding-top: 20px;">Объявлений для отображения не найдено.</h3>';
                return;
            }

            // Инициализируем карту Leaflet и центрируем ее на первом объявлении в списке
            const map = L.map('map').setView([adsData[0].lat, adsData[0].lon], 13);

            // Добавляем "подложку" карты. Используем OpenStreetMap - это бесплатный сервис.
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            // Теперь проходим по каждому объявлению в наших данных
            adsData.forEach(ad => {
                // Создаем маркер (отметку) на карте по координатам
                const marker = L.marker([ad.lat, ad.lon]).addTo(map);
                
                // К каждому маркеру "привязываем" всплывающее окошко с информацией
                marker.bindPopup(`<b>${ad.title}</b><br>${ad.price}`);
            });
            
            // Расширяем видимую область карты, чтобы все маркеры поместились на экране
            const group = new L.featureGroup(adsData.map(ad => L.marker([ad.lat, ad.lon])));
            map.fitBounds(group.getBounds().pad(0.5));
        });
    </script>

</body>
</html>
